{"version":3,"sources":["Compnents/Main.js","App.js","serviceWorker.js","index.js"],"names":["Main","state","cost","earnings","time","hours","minutes","wage","pay","sellingPrice","businessIncome","total","quantity","earnPercent","handleFormChange","event","setState","target","getAttribute","value","quan","this","cutting","parseFloat","income","calcHours","num","rounded","toString","i","length","includes","parseInt","newNum","slice","hour","Math","floor","id","className","placeholder","type","onChange","required","onClick","calculatePrice","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.127caf7c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./style.css\"\r\n\r\nexport default class Main extends Component {\r\n    state = {\r\n        cost: '' || '0',\r\n        earnings: '' || '0',\r\n        time: '' || '0',\r\n        hours: '' || '00',\r\n        minutes: '' || '00',\r\n        wage: '' || '0',\r\n        pay: '' || '0',\r\n        sellingPrice: '' || '0',\r\n        businessIncome: '' || '0',\r\n        total: '' || '0',\r\n        quantity: '' || '0',\r\n        earnPercent: '' || '0',\r\n      };\r\n    calculatePrice(cost, earnings, time, wage, quan){\r\n      let earnPercent = this.cutting((earnings/100) * cost);\r\n      let businessIncome = this.cutting(parseFloat(cost) + earnPercent);\r\n      let income = this.cutting(parseFloat(time/60 * wage));\r\n      this.setState({sellingPrice: businessIncome+income, earnPercent: earnPercent, cost: cost, pay: income, wage: wage, earnings: earnings, total: ((businessIncome+income)*quan)});\r\n      this.calcHours(quan, time);\r\n    };\r\n    cutting(num){\r\n        let rounded = num.toString();\r\n        for(let i = 0; i < rounded.length; i++){\r\n            if (!rounded.includes('.') && rounded.length <= 4){\r\n                return(parseInt(num));\r\n            } else if(rounded.includes('.') && rounded[i] === '.'){\r\n                let newNum = rounded.slice(0, i + 3);\r\n                return(parseFloat(newNum));\r\n            }\r\n        }\r\n    };\r\n    calcHours(quan, time){\r\n      if(quan*time < 60){\r\n        this.setState({minutes: quan*time, hours: '00'});\r\n      } else{\r\n        let hour = Math.floor(quan*time/60);\r\n        let minutes = quan*time % 60;\r\n        if(minutes === 0){\r\n          return(this.setState({minutes: \"00\", hours: parseInt(hour)}));\r\n        } else{\r\n          return(this.setState({hours: parseInt(hour), minutes: minutes}));\r\n        }\r\n      }\r\n    }\r\n    handleFormChange = event => {\r\n        this.setState({ [event.target.getAttribute('id')]: event.target.value });\r\n      };\r\n    render(){\r\n      return (\r\n        <div id=\"pricing\">\r\n          <div id=\"info\">\r\n            <div id=\"text\">\r\n              <div>Cost:</div>\r\n              <div>Margin:</div>\r\n              <div>Minutes taken:</div>\r\n              <div>Hourly Pay:</div>\r\n              <div>Quantity:</div>\r\n            </div>\r\n            <div className=\"page\">\r\n              <label className=\"field a-field a-field_a2\">\r\n                <input className=\"field__input a-field__input\" placeholder=\"Cost to make\" id=\"cost\" type=\"text\" onChange={this.handleFormChange} required></input>\r\n                <span className=\"a-field__label-wrap\">\r\n                  <span className=\"a-field__label\">Material Cost</span>\r\n                </span>\r\n              </label>\r\n              <label className=\"field a-field a-field_a2\">\r\n                <input className=\"field__input a-field__input\" placeholder=\"How much earnings\" id=\"earnings\" type=\"text\" onChange={this.handleFormChange} required></input>\r\n                <span className=\"a-field__label-wrap\">\r\n                  <span className=\"a-field__label\">Margin</span>\r\n                </span>\r\n              </label>    \r\n              <label className=\"field a-field a-field_a2\">\r\n                <input className=\"field__input a-field__input\" placeholder=\"Time Spent\" id=\"time\" type=\"text\" onChange={this.handleFormChange} required></input>\r\n                <span className=\"a-field__label-wrap\">\r\n                  <span className=\"a-field__label\">Minutes Taken</span>\r\n                </span>\r\n              </label>\r\n              <label className=\"field a-field a-field_a2\">\r\n                <input className=\"field__input a-field__input\" placeholder=\"Wage\" id=\"wage\" type=\"text\" onChange={this.handleFormChange} required></input>\r\n                <span className=\"a-field__label-wrap\">\r\n                  <span className=\"a-field__label\">Hourly Pay</span>\r\n                </span>\r\n              </label>\r\n              <label className=\"field a-field a-field_a2\">\r\n                <input className=\"field__input a-field__input\" placeholder=\"How Many\" id=\"quantity\" type=\"text\" onChange={this.handleFormChange} required></input>\r\n                <span className=\"a-field__label-wrap\">\r\n                  <span className=\"a-field__label\">Quantity</span>\r\n                </span>\r\n              </label>\r\n            \r\n              <div id=\"calculate\">\r\n                <button className=\"button4\" onClick={() => this.calculatePrice(this.state.cost, this.state.earnings, this.state.time, this.state.wage, this.state.quantity)} >Calculate</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div id=\"value\">\r\n            <div className=\"break-down\">\r\n              <div className=\"box\">Business Earnings:\r\n                <div className=\"income\">${this.cutting(this.state.earnPercent)}</div>\r\n              </div>\r\n              <div className=\"symbols\">+</div>\r\n              <div className=\"box\">Personal Earnings:\r\n                <div className=\"income\">${this.state.pay}</div>\r\n              </div>\r\n              <div className=\"symbols\">+</div>\r\n              <div className=\"box\">Cost:\r\n                <div className=\"income\">${this.state.cost}</div>\r\n              </div>\r\n              <div className=\"symbols\">=</div>\r\n              <div className=\"box\">Selling Price:\r\n                <div className=\"income\">${this.cutting(this.state.sellingPrice)}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"break-down\">\r\n            <div className=\"box\">Hourly:\r\n                <div className=\"income\">${this.state.wage}</div>\r\n              </div>\r\n              <div className=\"symbols\">*</div>\r\n              <div className=\"box\">Time:\r\n                <div className=\"income\">{this.state.hours}:{this.state.minutes}</div>\r\n              </div>\r\n              <div className=\"symbols\">=</div>\r\n              <div className=\"box\">Total earnings:\r\n                <div className=\"income\">${this.cutting(this.state.pay*this.state.quantity)}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"break-down\">\r\n              <div className=\"box\">Cost:\r\n                <div className=\"income\">${this.cutting(this.state.cost)}</div>\r\n              </div>\r\n              <div className=\"symbols\">*</div>\r\n              <div className=\"box\">Quantity:\r\n                <div className=\"income\">{this.state.quantity}</div>\r\n              </div>\r\n              <div className=\"symbols\">=</div>\r\n              <div className=\"box\">The total cost:\r\n                <div className=\"income\">${this.cutting(this.state.cost*this.state.quantity)}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"break-down\">\r\n              <div className=\"box\">Business Earnings:\r\n                <div className=\"income\">${this.cutting(this.state.earnPercent)}</div>\r\n              </div>\r\n              <div className=\"symbols\">*</div>\r\n              <div className=\"box\">Quantity:\r\n                <div className=\"income\">{this.state.quantity}</div>\r\n              </div>\r\n              <div className=\"symbols\">=</div>\r\n              <div className=\"box\">Total Business Earnings:\r\n                <div className=\"income\">${this.cutting(this.state.earnPercent*this.state.quantity)}</div>\r\n              </div>\r\n            </div>\r\n          </div> \r\n        </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport Main from './Compnents/Main'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}